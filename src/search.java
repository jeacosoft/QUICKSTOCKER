

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author AnthonyCee
 */
public class search extends javax.swing.JInternalFrame {
Connection con =Server.getConnection();
    PreparedStatement ps;
    ResultSet rs;
    /**
     * Creates new form search
     */
    public search() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtsearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("SEARCH ITEM");
        setToolTipText("Enter item name or initials here");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/usedimages/Search_48px.png"))); // NOI18N

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
          try {
            // search and display the items on both combo box and table
            String search = "SELECT ItemName, SalesPrice,Quantity FROM `admintable` WHERE ItemName like '" + txtsearch.getText() + "%'";
            ps = con.prepareStatement(search);
            rs = ps.executeQuery();
            vendor.citem.removeAllItems();

          while (rs.next()) {

              vendor.  citem.addItem(rs.getString("ItemName"));
               
               vendor. lprice.setText("");

               
               vendor.  lstock.setText("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            String q = "select id, ItemName, Description,SalesPrice from admintable WHERE ItemName like '" + txtsearch.getText() + "%'";
            ps = con.prepareStatement(q);
            rs = ps.executeQuery();

          vendor.  tableshow.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {

            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
        }

         try {
            // search and display the items on both combo box and table
            String search = "SELECT * FROM `admintable` WHERE ItemName like '" + txtsearch.getText() + "%'";
            ps = con.prepareStatement(search);
            rs = ps.executeQuery();
          index.citem.removeAllItems();
             
            while(rs.next()){
          
           index. citem.addItem(rs.getString("ItemName"));
            
            
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      try {
              String q = "select id, ItemName, Description,SalesPrice from admintable WHERE ItemName like '" + txtsearch.getText() + "%'";
            ps = con.prepareStatement(q);
             rs = ps.executeQuery();
             
         index.tableshow.setModel(DbUtils.resultSetToTableModel(rs)); 
             
        } catch (SQLException ex) {
            
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        

    }//GEN-LAST:event_txtsearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
